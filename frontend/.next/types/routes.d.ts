// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin" | "/admin/inspections" | "/admin/inspections/[requestId]" | "/admin/inspections/active" | "/admin/inspections/active/[id]" | "/admin/inspections/floorplan/[inspectionId]" | "/admin/inspections/progress/[inspectionId]" | "/admin/inspections/requests/[id]" | "/debug" | "/experts" | "/listings" | "/listings/[id]" | "/listings/[id]/explore" | "/mypage" | "/policy"
type AppRouteHandlerRoutes = "/api/inspections" | "/api/inspections/[id]" | "/api/listings/[id]"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/admin/inspections": {}
  "/admin/inspections/[requestId]": { "requestId": string; }
  "/admin/inspections/active": {}
  "/admin/inspections/active/[id]": { "id": string; }
  "/admin/inspections/floorplan/[inspectionId]": { "inspectionId": string; }
  "/admin/inspections/progress/[inspectionId]": { "inspectionId": string; }
  "/admin/inspections/requests/[id]": { "id": string; }
  "/api/inspections": {}
  "/api/inspections/[id]": { "id": string; }
  "/api/listings/[id]": { "id": string; }
  "/debug": {}
  "/experts": {}
  "/listings": {}
  "/listings/[id]": { "id": string; }
  "/listings/[id]/explore": { "id": string; }
  "/mypage": {}
  "/policy": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
